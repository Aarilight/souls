buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'org.ajoberstar.grgit' version '1.7.2'
}

apply plugin: 'net.minecraftforge.gradle.forge'


final commitId

if (hasProperty("grgit")) { // If there's a valid Git repository, get the latest commit ID
    commitId = "${grgit.head().abbreviatedId}"
} else { // Else fall back to NOGIT
    commitId = "NOGIT"
}


version = "${mc_version}-${mod_version}-${commitId}"
def soulus_version = version
group = "${package_group}"
archivesBaseName = "${mod_name}"

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "${mappings_version}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    replace "@VERSION@", "$soulus_version"
    replaceIn "Soulus.java"
}

repositories {
    // Ex Nihilo Creatio & CraftTweaker
    maven {
        url "http://maven.blamejared.com"
    }

    // JEI
    maven {
        name "DVS1 Maven FS" 
        url "http://dvs1.progwml6.com/files/maven" 
    }
    
    // HWYLA
    maven {
        name "tehnut"
        url "http://tehnut.info/maven"
    }
    
    repositories {
        // TheOneProbe
        maven {
            name "tterrag"
            url "http://maven.tterrag.com"
        }
        
        repositories {
            // RedstoneFlux
            maven {
                name = "CoFH Maven"
                url = "http://maven.covers1624.net"
            }
        }
    }
}

dependencies {
    provided "exnihilocreatio:exnihilocreatio:1.12-0.1.5.9"
    provided "mcp.mobius.waila:Hwyla:1.8.20-B38_1.12:api"
    provided "mezz.jei:jei_1.12.2:4.8.5.138:api"
    provided "CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-4.1.0.387"
    provided "CraftTweaker2:CraftTweaker2-API:4.1.0.387"
    provided "CraftTweaker2:ZenScript:4.1.0.387"
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mod_version", project.mod_version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version, 'mod_version':project.mod_version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    
    rename '(.+_at.cfg)', 'META-INF/$1'
}

jar {
    manifest {
        attributes 'FMLAT': 'soulus_at.cfg'
    }
}
